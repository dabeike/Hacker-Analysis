# encoding:utf-8
import requests
import warnings
import threading
import mysql.connector
import time
from BeautifulSoup import BeautifulSoup


def get_html(url):
    http_header = {"User-Agent": "Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0;"}

    try:
        r = requests.get(url, headers=http_header, timeout=10, verify=False)
    except Exception, e:
        print "获取页面信息失败", e
        return ''

    return BeautifulSoup(r.text)

data_arr = []
conn = mysql.connector.connect(user='root', password='', database='bugs', use_unicode=True)
cursor = conn.cursor()

def page_controller(page_start, page_end, thread_name):
    for page in range(page_start, page_end+1):
        page_content = get_html('https://www.exploit-db.com/dos/?order_by=date&order=desc&pg=%d' % page)
        trs = page_content.find("table", {"class": "exploit_list bootstrap-wrapper"}).tbody.findAll("tr")
        for tr in trs:      # 扫描每一页的数据
            data = {'time': tr.find("td", {"class": "date"}).string.encode('utf-8').lstrip('\n').strip('\t'),
                    'title': tr.find("td", {"class": "description"}).a.string.encode('utf-8'),
                    'url': tr.find("td", {"class": "description"}).a['href'].encode('utf-8'),
                    'author': tr.find("td", {"class": "author"}).a.string.encode('utf-8').lstrip('\n').strip('\t'),
                    'author_url': tr.find("td", {"class": "author"}).a['href'].encode('utf-8'),
                    'platform': tr.find("td", {"class": "platform"}).a.string.encode('utf-8'),
                    'type': 'Exploit Shellcode Archive'}

            data_arr.append(tuple(list(data.values())))
        print "%s finish page-%d" % (thread_name, page)
        # print data_arr

time1 = time.time()
with warnings.catch_warnings():
    warnings.simplefilter("ignore")

    thread_arr = {}
    for count in range(1):
        thread_arr[count] = threading.Thread(target=page_controller, args=(count*3+1, (count+1)*3, 'thread-%d' % count))
        thread_arr[count].start()

    for count in thread_arr:
        thread_arr[count].join()

    sql = 'insert ignore into exploit_db (title,url,author,platform,author_url,time,type) values (%s,%s,%s,%s,%s,%s,%s)'
    cursor.executemany(sql, data_arr)
    conn.commit()
    cursor.close()
    conn.close()

    time2 = time.time()
    print "共用时 %d ，插入了 %d 行数据" % (time2 - time1, len(data_arr))